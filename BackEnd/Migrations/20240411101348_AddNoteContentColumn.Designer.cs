// <auto-generated />
using System;
using BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240411101348_AddNoteContentColumn")]
    partial class AddNoteContentColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("BackEnd.Models.Mob", b =>
                {
                    b.Property<int>("MobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MobMembers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("MobId");

                    b.ToTable("Mobs");
                });

            modelBuilder.Entity("BackEnd.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MobId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoteContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NoteDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MobId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("BackEnd.Models.Note", b =>
                {
                    b.HasOne("BackEnd.Models.Mob", "Mob")
                        .WithMany("Notes")
                        .HasForeignKey("MobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mob");
                });

            modelBuilder.Entity("BackEnd.Models.Mob", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
